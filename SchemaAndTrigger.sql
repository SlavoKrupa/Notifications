CREATE SCHEMA IF NOT EXISTS NOTIFICATIONS;
SET search_path TO NOTIFICATIONS;
DROP TABLE IF EXISTS SIMPLE_NOTIFICATIONS;
CREATE TABLE  SIMPLE_NOTIFICATIONS (
id BIGSERIAL PRIMARY KEY,
db_creation TIMESTAMP DEFAULT current_timestamp,
message CHAR(1)
);


CREATE OR REPLACE FUNCTION SIMPLE_NOTIFICATIONS_NOTIFY()
  RETURNS trigger AS
$BODY$
DECLARE
    id bigint;
    db_creation TIMESTAMP;
    BEGIN
	 IF TG_OP = 'INSERT' OR TG_OP = 'UPDATE' THEN
		id = NEW.id;
		db_creation=NEW.db_creation;
		PERFORM PG_NOTIFY ('SIMPLE_NOTIFY_CHANNEL', json_build_object('db_creation', db_creation, 'id', id)::text);
	ELSE
	     -- TODO ADD DELETE, MODIFICATION SUPPORT - DISCUSSION NEEDED
		id = OLD.id;
		db_creation=OLD.db_creation;
	END IF;
    
       
        
        
        RETURN NULL;
    END; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION SIMPLE_NOTIFICATIONS_NOTIFY() OWNER TO postgres;

CREATE TRIGGER SIMPLE_NOTIFICATIONS_NOTIFY
  AFTER INSERT OR UPDATE OR DELETE
  ON SIMPLE_NOTIFICATIONS
  FOR EACH ROW
  EXECUTE PROCEDURE SIMPLE_NOTIFICATIONS_NOTIFY();
  

